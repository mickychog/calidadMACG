{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({}, props, {\n    ref: ref,\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","map":{"version":3,"names":["_extends","React","PropTypes","forwardRef","useGridApiContext","GridOverlay","jsx","_jsx","GridNoRowsOverlay","props","ref","apiRef","noRowsLabel","current","getLocaleText","children","process","env","NODE_ENV","propTypes","sx","oneOfType","arrayOf","func","object","bool"],"sources":["D:/2025/Calidad de Software/calidadMACG/Ejercicios/Ejercicio Jmeter-Selenium/frontend/node_modules/@mui/x-data-grid/esm/components/GridNoRowsOverlay.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({}, props, {\n    ref: ref,\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,UAAU,QAAQ,6BAA6B;AACxD,SAASC,iBAAiB,QAAQ,qCAAqC;AACvE,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,iBAAiB,GAAGL,UAAU,CAAC,SAASK,iBAAiBA,CAACC,KAAK,EAAEC,GAAG,EAAE;EAC1E,MAAMC,MAAM,GAAGP,iBAAiB,CAAC,CAAC;EAClC,MAAMQ,WAAW,GAAGD,MAAM,CAACE,OAAO,CAACC,aAAa,CAAC,aAAa,CAAC;EAC/D,OAAO,aAAaP,IAAI,CAACF,WAAW,EAAEL,QAAQ,CAAC,CAAC,CAAC,EAAES,KAAK,EAAE;IACxDC,GAAG,EAAEA,GAAG;IACRK,QAAQ,EAAEH;EACZ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AACFI,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGV,iBAAiB,CAACW,SAAS,GAAG;EACpE;EACA;EACA;EACA;EACAC,EAAE,EAAElB,SAAS,CAACmB,SAAS,CAAC,CAACnB,SAAS,CAACoB,OAAO,CAACpB,SAAS,CAACmB,SAAS,CAAC,CAACnB,SAAS,CAACqB,IAAI,EAAErB,SAAS,CAACsB,MAAM,EAAEtB,SAAS,CAACuB,IAAI,CAAC,CAAC,CAAC,EAAEvB,SAAS,CAACqB,IAAI,EAAErB,SAAS,CAACsB,MAAM,CAAC;AACxJ,CAAC,GAAG,KAAK,CAAC;AACV,SAAShB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}