{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"row\", \"rowId\", \"rowNode\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"showRightBorder\", \"showLeftBorder\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { doesSupportPreventScroll } from \"../../utils/doesSupportPreventScroll.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../models/index.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { GridPinnedColumnPosition } from \"../../hooks/features/columns/gridColumnsInterfaces.js\";\nimport { PinnedColumnPosition } from \"../../internals/constants.js\";\nimport { gridRowSpanningHiddenCellsSelector, gridRowSpanningSpannedCellsSelector } from \"../../hooks/features/rows/gridRowSpanningSelectors.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridEditCellStateSelector } from \"../../hooks/features/editing/gridEditingSelectors.js\";\nimport { attachPinnedStyle } from \"../../internals/utils/index.js\";\nimport { useGridConfiguration } from \"../../hooks/utils/useGridConfiguration.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedColumnPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedColumnPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedColumnPosition.NONE]: undefined,\n  [PinnedColumnPosition.VIRTUAL]: undefined\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedColumnPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedColumnPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = forwardRef(function GridCell(props, ref) {\n  const {\n      column,\n      row,\n      rowId,\n      rowNode,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      showRightBorder,\n      showLeftBorder,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isRtl = useRtl();\n  const field = column.field;\n  const editCellState = useGridSelector(apiRef, gridEditCellStateSelector, {\n    rowId,\n    field\n  });\n  const config = useGridConfiguration();\n  const cellAggregationResult = config.hooks.useCellAggregationResult(rowId, field);\n  const cellMode = editCellState ? GridCellModes.Edit : GridCellModes.View;\n  const cellParams = apiRef.current.getCellParamsForRow(rowId, field, row, {\n    colDef: column,\n    cellMode,\n    rowNode: rowNode,\n    tabIndex: useGridSelector(apiRef, () => {\n      const cellTabIndex = gridTabIndexCellSelector(apiRef);\n      return cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === rowId ? 0 : -1;\n    }),\n    hasFocus: useGridSelector(apiRef, () => {\n      const focus = gridFocusCellSelector(apiRef);\n      return focus?.id === rowId && focus.field === field;\n    })\n  });\n  cellParams.api = apiRef.current;\n  if (cellAggregationResult) {\n    cellParams.value = cellAggregationResult.value;\n    cellParams.formattedValue = column.valueFormatter ? column.valueFormatter(cellParams.value, row, column, apiRef) : cellParams.value;\n  }\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const hiddenCells = useGridSelector(apiRef, gridRowSpanningHiddenCellsSelector);\n  const spannedCells = useGridSelector(apiRef, gridRowSpanningSpannedCellsSelector);\n  const {\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParams;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParams.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParams));\n  }\n  const valueToRender = cellParams.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const isCellRowSpanned = hiddenCells[rowId]?.[field] ?? false;\n  const rowSpan = spannedCells[rowId]?.[field] ?? 1;\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        height: 0,\n        border: 0\n      };\n    }\n    const cellStyle = attachPinnedStyle(_extends({\n      '--width': `${width}px`\n    }, styleProp), isRtl, pinnedPosition, pinnedOffset);\n    const isLeftPinned = pinnedPosition === PinnedColumnPosition.LEFT;\n    const isRightPinned = pinnedPosition === PinnedColumnPosition.RIGHT;\n    if (rowSpan > 1) {\n      cellStyle.height = `calc(var(--height) * ${rowSpan})`;\n      cellStyle.zIndex = 10;\n      if (isLeftPinned || isRightPinned) {\n        cellStyle.zIndex = 40;\n      }\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition, isRtl, rowSpan]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (isCellRowSpanned) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      \"data-colindex\": colIndex,\n      role: \"presentation\",\n      style: _extends({\n        width: 'var(--width)'\n      }, style)\n    });\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParams);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParams.formattedValue;\n    const params = _extends({}, cellParams, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if (/*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    className: clsx(classes.root, classNames, className),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    \"aria-rowspan\": rowSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    ref: handleRef,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  isNotVisible: PropTypes.bool.isRequired,\n  pinnedOffset: PropTypes.number,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  row: PropTypes.object.isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  rowNode: PropTypes.object.isRequired,\n  showLeftBorder: PropTypes.bool.isRequired,\n  showRightBorder: PropTypes.bool.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","React","PropTypes","clsx","unstable_useForkRef","useForkRef","unstable_composeClasses","composeClasses","unstable_ownerDocument","ownerDocument","unstable_capitalize","capitalize","fastMemo","useRtl","forwardRef","doesSupportPreventScroll","getDataGridUtilityClass","gridClasses","GridCellModes","useGridSelector","useGridRootProps","gridFocusCellSelector","gridTabIndexCellSelector","GridPinnedColumnPosition","PinnedColumnPosition","gridRowSpanningHiddenCellsSelector","gridRowSpanningSpannedCellsSelector","useGridPrivateApiContext","gridEditCellStateSelector","attachPinnedStyle","useGridConfiguration","jsx","_jsx","gridPinnedColumnPositionLookup","LEFT","RIGHT","NONE","undefined","VIRTUAL","useUtilityClasses","ownerState","align","showLeftBorder","showRightBorder","pinnedPosition","isEditable","isSelected","isSelectionMode","classes","slots","root","warnedOnce","GridCell","props","ref","column","row","rowId","rowNode","colIndex","width","className","style","styleProp","colSpan","disableDragEvents","isNotVisible","pinnedOffset","onClick","onDoubleClick","onMouseDown","onMouseUp","onMouseOver","onKeyDown","onKeyUp","onDragEnter","onDragOver","other","apiRef","rootProps","isRtl","field","editCellState","config","cellAggregationResult","hooks","useCellAggregationResult","cellMode","Edit","View","cellParams","current","getCellParamsForRow","colDef","tabIndex","cellTabIndex","id","hasFocus","focus","api","value","formattedValue","valueFormatter","unstable_applyPipeProcessors","hiddenCells","spannedCells","canManageOwnFocus","type","getActions","getRowParams","some","action","disabled","rootClasses","getCellClassName","pipesClassName","filter","Boolean","join","classNames","cellClassName","push","display","valueToRender","cellRef","useRef","handleRef","focusElementRef","cellSelection","publishMouseUp","useCallback","eventName","event","params","getCellParams","publishEvent","publishMouseDown","publish","propHandler","getRow","isCellRowSpanned","rowSpan","useMemo","padding","opacity","height","border","cellStyle","isLeftPinned","isRightPinned","zIndex","useEffect","doc","rootElementRef","contains","activeElement","focusableElement","querySelector","elementToFocus","preventScroll","scrollPosition","getScrollPosition","scroll","role","handleFocus","onFocus","process","env","NODE_ENV","experimentalFeatures","warnIfFocusStateIsNotSynced","focusedCell","console","warn","children","title","renderCell","renderEditCell","updatedRow","getRowWithUpdatedValues","editCellStateRest","valueString","toString","isValidElement","cloneElement","draggableEventHandlers","propTypes","oneOf","isRequired","number","object","bool","oneOfType","string","MemoizedGridCell"],"sources":["D:/2025/Calidad de Software/calidadMACG/Ejercicios/Ejercicio Jmeter-Selenium/frontend/node_modules/@mui/x-data-grid/esm/components/cell/GridCell.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"row\", \"rowId\", \"rowNode\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"showRightBorder\", \"showLeftBorder\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { doesSupportPreventScroll } from \"../../utils/doesSupportPreventScroll.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../models/index.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { GridPinnedColumnPosition } from \"../../hooks/features/columns/gridColumnsInterfaces.js\";\nimport { PinnedColumnPosition } from \"../../internals/constants.js\";\nimport { gridRowSpanningHiddenCellsSelector, gridRowSpanningSpannedCellsSelector } from \"../../hooks/features/rows/gridRowSpanningSelectors.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridEditCellStateSelector } from \"../../hooks/features/editing/gridEditingSelectors.js\";\nimport { attachPinnedStyle } from \"../../internals/utils/index.js\";\nimport { useGridConfiguration } from \"../../hooks/utils/useGridConfiguration.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedColumnPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedColumnPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedColumnPosition.NONE]: undefined,\n  [PinnedColumnPosition.VIRTUAL]: undefined\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedColumnPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedColumnPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = forwardRef(function GridCell(props, ref) {\n  const {\n      column,\n      row,\n      rowId,\n      rowNode,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      showRightBorder,\n      showLeftBorder,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isRtl = useRtl();\n  const field = column.field;\n  const editCellState = useGridSelector(apiRef, gridEditCellStateSelector, {\n    rowId,\n    field\n  });\n  const config = useGridConfiguration();\n  const cellAggregationResult = config.hooks.useCellAggregationResult(rowId, field);\n  const cellMode = editCellState ? GridCellModes.Edit : GridCellModes.View;\n  const cellParams = apiRef.current.getCellParamsForRow(rowId, field, row, {\n    colDef: column,\n    cellMode,\n    rowNode: rowNode,\n    tabIndex: useGridSelector(apiRef, () => {\n      const cellTabIndex = gridTabIndexCellSelector(apiRef);\n      return cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === rowId ? 0 : -1;\n    }),\n    hasFocus: useGridSelector(apiRef, () => {\n      const focus = gridFocusCellSelector(apiRef);\n      return focus?.id === rowId && focus.field === field;\n    })\n  });\n  cellParams.api = apiRef.current;\n  if (cellAggregationResult) {\n    cellParams.value = cellAggregationResult.value;\n    cellParams.formattedValue = column.valueFormatter ? column.valueFormatter(cellParams.value, row, column, apiRef) : cellParams.value;\n  }\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const hiddenCells = useGridSelector(apiRef, gridRowSpanningHiddenCellsSelector);\n  const spannedCells = useGridSelector(apiRef, gridRowSpanningSpannedCellsSelector);\n  const {\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParams;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParams.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParams));\n  }\n  const valueToRender = cellParams.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const isCellRowSpanned = hiddenCells[rowId]?.[field] ?? false;\n  const rowSpan = spannedCells[rowId]?.[field] ?? 1;\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        height: 0,\n        border: 0\n      };\n    }\n    const cellStyle = attachPinnedStyle(_extends({\n      '--width': `${width}px`\n    }, styleProp), isRtl, pinnedPosition, pinnedOffset);\n    const isLeftPinned = pinnedPosition === PinnedColumnPosition.LEFT;\n    const isRightPinned = pinnedPosition === PinnedColumnPosition.RIGHT;\n    if (rowSpan > 1) {\n      cellStyle.height = `calc(var(--height) * ${rowSpan})`;\n      cellStyle.zIndex = 10;\n      if (isLeftPinned || isRightPinned) {\n        cellStyle.zIndex = 40;\n      }\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition, isRtl, rowSpan]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (isCellRowSpanned) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      \"data-colindex\": colIndex,\n      role: \"presentation\",\n      style: _extends({\n        width: 'var(--width)'\n      }, style)\n    });\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParams);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParams.formattedValue;\n    const params = _extends({}, cellParams, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if (/*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    className: clsx(classes.root, classNames, className),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    \"aria-rowspan\": rowSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    ref: handleRef,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  isNotVisible: PropTypes.bool.isRequired,\n  pinnedOffset: PropTypes.number,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  row: PropTypes.object.isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  rowNode: PropTypes.object.isRequired,\n  showLeftBorder: PropTypes.bool.isRequired,\n  showRightBorder: PropTypes.bool.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}