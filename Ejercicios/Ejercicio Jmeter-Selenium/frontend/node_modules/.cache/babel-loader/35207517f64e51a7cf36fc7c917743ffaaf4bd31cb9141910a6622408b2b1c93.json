{"ast":null,"code":"import * as React from 'react';\nimport { useGridConfiguration } from \"../../hooks/utils/useGridConfiguration.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLASSNAME_PREFIX = 'MuiDataGridVariables';\nconst CSSVariablesContext = /*#__PURE__*/React.createContext({\n  className: 'unset',\n  tag: /*#__PURE__*/_jsx(\"style\", {\n    href: \"/unset\"\n  })\n});\nexport function useCSSVariablesClass() {\n  return React.useContext(CSSVariablesContext).className;\n}\nexport function useCSSVariablesContext() {\n  return React.useContext(CSSVariablesContext);\n}\nexport function GridPortalWrapper({\n  children\n}) {\n  const className = useCSSVariablesClass();\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: className,\n    children: children\n  });\n}\nexport function GridCSSVariablesContext(props) {\n  const config = useGridConfiguration();\n  const description = config.hooks.useCSSVariables();\n  const context = React.useMemo(() => {\n    const className = `${CLASSNAME_PREFIX}-${description.id}`;\n    const cssString = `.${className}{${variablesToString(description.variables)}}`;\n    const tag = /*#__PURE__*/_jsx(\"style\", {\n      href: `/${className}`,\n      children: cssString\n    });\n    return {\n      className,\n      tag\n    };\n  }, [description]);\n  return /*#__PURE__*/_jsx(CSSVariablesContext.Provider, {\n    value: context,\n    children: props.children\n  });\n}\nfunction variablesToString(variables) {\n  let output = '';\n  for (const key in variables) {\n    if (Object.hasOwn(variables, key)) {\n      output += `${key}:${variables[key]};`;\n    }\n  }\n  return output;\n}","map":{"version":3,"names":["React","useGridConfiguration","jsx","_jsx","CLASSNAME_PREFIX","CSSVariablesContext","createContext","className","tag","href","useCSSVariablesClass","useContext","useCSSVariablesContext","GridPortalWrapper","children","GridCSSVariablesContext","props","config","description","hooks","useCSSVariables","context","useMemo","id","cssString","variablesToString","variables","Provider","value","output","key","Object","hasOwn"],"sources":["D:/2025/Calidad de Software/calidadMACG/Ejercicios/Ejercicio Jmeter-Selenium/frontend/node_modules/@mui/x-data-grid/esm/utils/css/context.js"],"sourcesContent":["import * as React from 'react';\nimport { useGridConfiguration } from \"../../hooks/utils/useGridConfiguration.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLASSNAME_PREFIX = 'MuiDataGridVariables';\nconst CSSVariablesContext = /*#__PURE__*/React.createContext({\n  className: 'unset',\n  tag: /*#__PURE__*/_jsx(\"style\", {\n    href: \"/unset\"\n  })\n});\nexport function useCSSVariablesClass() {\n  return React.useContext(CSSVariablesContext).className;\n}\nexport function useCSSVariablesContext() {\n  return React.useContext(CSSVariablesContext);\n}\nexport function GridPortalWrapper({\n  children\n}) {\n  const className = useCSSVariablesClass();\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: className,\n    children: children\n  });\n}\nexport function GridCSSVariablesContext(props) {\n  const config = useGridConfiguration();\n  const description = config.hooks.useCSSVariables();\n  const context = React.useMemo(() => {\n    const className = `${CLASSNAME_PREFIX}-${description.id}`;\n    const cssString = `.${className}{${variablesToString(description.variables)}}`;\n    const tag = /*#__PURE__*/_jsx(\"style\", {\n      href: `/${className}`,\n      children: cssString\n    });\n    return {\n      className,\n      tag\n    };\n  }, [description]);\n  return /*#__PURE__*/_jsx(CSSVariablesContext.Provider, {\n    value: context,\n    children: props.children\n  });\n}\nfunction variablesToString(variables) {\n  let output = '';\n  for (const key in variables) {\n    if (Object.hasOwn(variables, key)) {\n      output += `${key}:${variables[key]};`;\n    }\n  }\n  return output;\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,oBAAoB,QAAQ,2CAA2C;AAChF,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,gBAAgB,GAAG,sBAAsB;AAC/C,MAAMC,mBAAmB,GAAG,aAAaL,KAAK,CAACM,aAAa,CAAC;EAC3DC,SAAS,EAAE,OAAO;EAClBC,GAAG,EAAE,aAAaL,IAAI,CAAC,OAAO,EAAE;IAC9BM,IAAI,EAAE;EACR,CAAC;AACH,CAAC,CAAC;AACF,OAAO,SAASC,oBAAoBA,CAAA,EAAG;EACrC,OAAOV,KAAK,CAACW,UAAU,CAACN,mBAAmB,CAAC,CAACE,SAAS;AACxD;AACA,OAAO,SAASK,sBAAsBA,CAAA,EAAG;EACvC,OAAOZ,KAAK,CAACW,UAAU,CAACN,mBAAmB,CAAC;AAC9C;AACA,OAAO,SAASQ,iBAAiBA,CAAC;EAChCC;AACF,CAAC,EAAE;EACD,MAAMP,SAAS,GAAGG,oBAAoB,CAAC,CAAC;EACxC,OAAO,aAAaP,IAAI,CAAC,KAAK,EAAE;IAC9BI,SAAS,EAAEA,SAAS;IACpBO,QAAQ,EAAEA;EACZ,CAAC,CAAC;AACJ;AACA,OAAO,SAASC,uBAAuBA,CAACC,KAAK,EAAE;EAC7C,MAAMC,MAAM,GAAGhB,oBAAoB,CAAC,CAAC;EACrC,MAAMiB,WAAW,GAAGD,MAAM,CAACE,KAAK,CAACC,eAAe,CAAC,CAAC;EAClD,MAAMC,OAAO,GAAGrB,KAAK,CAACsB,OAAO,CAAC,MAAM;IAClC,MAAMf,SAAS,GAAG,GAAGH,gBAAgB,IAAIc,WAAW,CAACK,EAAE,EAAE;IACzD,MAAMC,SAAS,GAAG,IAAIjB,SAAS,IAAIkB,iBAAiB,CAACP,WAAW,CAACQ,SAAS,CAAC,GAAG;IAC9E,MAAMlB,GAAG,GAAG,aAAaL,IAAI,CAAC,OAAO,EAAE;MACrCM,IAAI,EAAE,IAAIF,SAAS,EAAE;MACrBO,QAAQ,EAAEU;IACZ,CAAC,CAAC;IACF,OAAO;MACLjB,SAAS;MACTC;IACF,CAAC;EACH,CAAC,EAAE,CAACU,WAAW,CAAC,CAAC;EACjB,OAAO,aAAaf,IAAI,CAACE,mBAAmB,CAACsB,QAAQ,EAAE;IACrDC,KAAK,EAAEP,OAAO;IACdP,QAAQ,EAAEE,KAAK,CAACF;EAClB,CAAC,CAAC;AACJ;AACA,SAASW,iBAAiBA,CAACC,SAAS,EAAE;EACpC,IAAIG,MAAM,GAAG,EAAE;EACf,KAAK,MAAMC,GAAG,IAAIJ,SAAS,EAAE;IAC3B,IAAIK,MAAM,CAACC,MAAM,CAACN,SAAS,EAAEI,GAAG,CAAC,EAAE;MACjCD,MAAM,IAAI,GAAGC,GAAG,IAAIJ,SAAS,CAACI,GAAG,CAAC,GAAG;IACvC;EACF;EACA,OAAOD,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}