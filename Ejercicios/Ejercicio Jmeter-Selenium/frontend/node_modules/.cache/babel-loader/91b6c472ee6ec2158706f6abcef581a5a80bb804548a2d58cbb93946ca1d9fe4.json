{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"variant\", \"noRowsVariant\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { GridSkeletonLoadingOverlay } from \"./GridSkeletonLoadingOverlay.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { gridRowCountSelector, useGridSelector } from \"../hooks/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst LOADING_VARIANTS = {\n  'circular-progress': {\n    component: rootProps => rootProps.slots.baseCircularProgress,\n    style: {}\n  },\n  'linear-progress': {\n    component: rootProps => rootProps.slots.baseLinearProgress,\n    style: {\n      display: 'block'\n    }\n  },\n  skeleton: {\n    component: () => GridSkeletonLoadingOverlay,\n    style: {\n      display: 'block'\n    }\n  }\n};\nconst GridLoadingOverlay = forwardRef(function GridLoadingOverlay(props, ref) {\n  const {\n      variant = 'linear-progress',\n      noRowsVariant = 'skeleton',\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const rowsCount = useGridSelector(apiRef, gridRowCountSelector);\n  const activeVariant = LOADING_VARIANTS[rowsCount === 0 ? noRowsVariant : variant];\n  const Component = activeVariant.component(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    style: _extends({}, activeVariant.style, style)\n  }, other, {\n    ref: ref,\n    children: /*#__PURE__*/_jsx(Component, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The variant of the overlay when no rows are displayed.\n   * @default 'skeleton'\n   */\n  noRowsVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant of the overlay.\n   * @default 'linear-progress'\n   */\n  variant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton'])\n} : void 0;\nexport { GridLoadingOverlay };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","forwardRef","useGridRootProps","GridOverlay","GridSkeletonLoadingOverlay","useGridApiContext","gridRowCountSelector","useGridSelector","jsx","_jsx","LOADING_VARIANTS","component","rootProps","slots","baseCircularProgress","style","baseLinearProgress","display","skeleton","GridLoadingOverlay","props","ref","variant","noRowsVariant","other","apiRef","rowsCount","activeVariant","Component","children","process","env","NODE_ENV","propTypes","oneOf","sx","oneOfType","arrayOf","func","object","bool"],"sources":["D:/2025/Calidad de Software/calidadMACG/Ejercicios/Ejercicio Jmeter-Selenium/frontend/node_modules/@mui/x-data-grid/esm/components/GridLoadingOverlay.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"variant\", \"noRowsVariant\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { GridSkeletonLoadingOverlay } from \"./GridSkeletonLoadingOverlay.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { gridRowCountSelector, useGridSelector } from \"../hooks/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst LOADING_VARIANTS = {\n  'circular-progress': {\n    component: rootProps => rootProps.slots.baseCircularProgress,\n    style: {}\n  },\n  'linear-progress': {\n    component: rootProps => rootProps.slots.baseLinearProgress,\n    style: {\n      display: 'block'\n    }\n  },\n  skeleton: {\n    component: () => GridSkeletonLoadingOverlay,\n    style: {\n      display: 'block'\n    }\n  }\n};\nconst GridLoadingOverlay = forwardRef(function GridLoadingOverlay(props, ref) {\n  const {\n      variant = 'linear-progress',\n      noRowsVariant = 'skeleton',\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const rowsCount = useGridSelector(apiRef, gridRowCountSelector);\n  const activeVariant = LOADING_VARIANTS[rowsCount === 0 ? noRowsVariant : variant];\n  const Component = activeVariant.component(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    style: _extends({}, activeVariant.style, style)\n  }, other, {\n    ref: ref,\n    children: /*#__PURE__*/_jsx(Component, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The variant of the overlay when no rows are displayed.\n   * @default 'skeleton'\n   */\n  noRowsVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant of the overlay.\n   * @default 'linear-progress'\n   */\n  variant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton'])\n} : void 0;\nexport { GridLoadingOverlay };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}