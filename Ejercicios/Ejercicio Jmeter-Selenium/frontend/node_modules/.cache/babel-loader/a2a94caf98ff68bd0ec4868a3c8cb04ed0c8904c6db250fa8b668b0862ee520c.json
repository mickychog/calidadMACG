{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { GridPreferencePanelsValue } from \"../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { gridColumnFieldsSelector, useGridSelector } from \"../hooks/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridNoColumnsOverlay = forwardRef(function GridNoColumnsOverlay(props, ref) {\n  const rootProps = useGridRootProps();\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnFieldsSelector);\n  const handleOpenManageColumns = () => {\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  };\n  const showManageColumnsButton = !rootProps.disableColumnSelector && columns.length > 0;\n  return /*#__PURE__*/_jsxs(GridOverlay, _extends({}, props, {\n    ref: ref,\n    children: [apiRef.current.getLocaleText('noColumnsOverlayLabel'), showManageColumnsButton && /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n      size: \"small\"\n    }, rootProps.slotProps?.baseButton, {\n      onClick: handleOpenManageColumns,\n      children: apiRef.current.getLocaleText('noColumnsOverlayManageColumns')\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoColumnsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoColumnsOverlay };","map":{"version":3,"names":["_extends","React","PropTypes","forwardRef","useGridRootProps","useGridApiContext","GridOverlay","GridPreferencePanelsValue","gridColumnFieldsSelector","useGridSelector","jsx","_jsx","jsxs","_jsxs","GridNoColumnsOverlay","props","ref","rootProps","apiRef","columns","handleOpenManageColumns","current","showPreferences","showManageColumnsButton","disableColumnSelector","length","children","getLocaleText","slots","baseButton","size","slotProps","onClick","process","env","NODE_ENV","propTypes","sx","oneOfType","arrayOf","func","object","bool"],"sources":["D:/2025/Calidad de Software/calidadMACG/Ejercicios/Ejercicio Jmeter-Selenium/frontend/node_modules/@mui/x-data-grid/esm/components/GridNoColumnsOverlay.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { GridPreferencePanelsValue } from \"../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { gridColumnFieldsSelector, useGridSelector } from \"../hooks/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridNoColumnsOverlay = forwardRef(function GridNoColumnsOverlay(props, ref) {\n  const rootProps = useGridRootProps();\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnFieldsSelector);\n  const handleOpenManageColumns = () => {\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  };\n  const showManageColumnsButton = !rootProps.disableColumnSelector && columns.length > 0;\n  return /*#__PURE__*/_jsxs(GridOverlay, _extends({}, props, {\n    ref: ref,\n    children: [apiRef.current.getLocaleText('noColumnsOverlayLabel'), showManageColumnsButton && /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n      size: \"small\"\n    }, rootProps.slotProps?.baseButton, {\n      onClick: handleOpenManageColumns,\n      children: apiRef.current.getLocaleText('noColumnsOverlayManageColumns')\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoColumnsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoColumnsOverlay };"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,UAAU,QAAQ,6BAA6B;AACxD,SAASC,gBAAgB,QAAQ,oCAAoC;AACrE,SAASC,iBAAiB,QAAQ,qCAAqC;AACvE,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,yBAAyB,QAAQ,iEAAiE;AAC3G,SAASC,wBAAwB,EAAEC,eAAe,QAAQ,mBAAmB;AAC7E,SAASC,GAAG,IAAIC,IAAI,EAAEC,IAAI,IAAIC,KAAK,QAAQ,mBAAmB;AAC9D,MAAMC,oBAAoB,GAAGX,UAAU,CAAC,SAASW,oBAAoBA,CAACC,KAAK,EAAEC,GAAG,EAAE;EAChF,MAAMC,SAAS,GAAGb,gBAAgB,CAAC,CAAC;EACpC,MAAMc,MAAM,GAAGb,iBAAiB,CAAC,CAAC;EAClC,MAAMc,OAAO,GAAGV,eAAe,CAACS,MAAM,EAAEV,wBAAwB,CAAC;EACjE,MAAMY,uBAAuB,GAAGA,CAAA,KAAM;IACpCF,MAAM,CAACG,OAAO,CAACC,eAAe,CAACf,yBAAyB,CAACY,OAAO,CAAC;EACnE,CAAC;EACD,MAAMI,uBAAuB,GAAG,CAACN,SAAS,CAACO,qBAAqB,IAAIL,OAAO,CAACM,MAAM,GAAG,CAAC;EACtF,OAAO,aAAaZ,KAAK,CAACP,WAAW,EAAEN,QAAQ,CAAC,CAAC,CAAC,EAAEe,KAAK,EAAE;IACzDC,GAAG,EAAEA,GAAG;IACRU,QAAQ,EAAE,CAACR,MAAM,CAACG,OAAO,CAACM,aAAa,CAAC,uBAAuB,CAAC,EAAEJ,uBAAuB,IAAI,aAAaZ,IAAI,CAACM,SAAS,CAACW,KAAK,CAACC,UAAU,EAAE7B,QAAQ,CAAC;MAClJ8B,IAAI,EAAE;IACR,CAAC,EAAEb,SAAS,CAACc,SAAS,EAAEF,UAAU,EAAE;MAClCG,OAAO,EAAEZ,uBAAuB;MAChCM,QAAQ,EAAER,MAAM,CAACG,OAAO,CAACM,aAAa,CAAC,+BAA+B;IACxE,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AACFM,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGrB,oBAAoB,CAACsB,SAAS,GAAG;EACvE;EACA;EACA;EACA;EACAC,EAAE,EAAEnC,SAAS,CAACoC,SAAS,CAAC,CAACpC,SAAS,CAACqC,OAAO,CAACrC,SAAS,CAACoC,SAAS,CAAC,CAACpC,SAAS,CAACsC,IAAI,EAAEtC,SAAS,CAACuC,MAAM,EAAEvC,SAAS,CAACwC,IAAI,CAAC,CAAC,CAAC,EAAExC,SAAS,CAACsC,IAAI,EAAEtC,SAAS,CAACuC,MAAM,CAAC;AACxJ,CAAC,GAAG,KAAK,CAAC;AACV,SAAS3B,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}