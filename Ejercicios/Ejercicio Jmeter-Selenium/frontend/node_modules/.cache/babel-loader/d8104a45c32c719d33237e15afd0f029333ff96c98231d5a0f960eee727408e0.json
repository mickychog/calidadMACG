{"ast":null,"code":"import { GRID_ID_AUTOGENERATED } from \"../features/rows/gridRowsUtils.js\";\nimport { createRootSelector } from \"../../utils/createSelector.js\";\n\n/**\n * Get the row id for a given row\n * @param apiRef - The grid api reference\n * @param {GridRowModel} row - The row to get the id for\n * @returns {GridRowId} The row id\n */\nexport const gridRowIdSelector = createRootSelector((state, row) => {\n  if (GRID_ID_AUTOGENERATED in row) {\n    return row[GRID_ID_AUTOGENERATED];\n  }\n  return state.props.getRowId ? state.props.getRowId(row) : row.id;\n});","map":{"version":3,"names":["GRID_ID_AUTOGENERATED","createRootSelector","gridRowIdSelector","state","row","props","getRowId","id"],"sources":["D:/2025/Calidad de Software/calidadMACG/Ejercicios/Ejercicio Jmeter-Selenium/frontend/node_modules/@mui/x-data-grid/esm/hooks/core/gridPropsSelectors.js"],"sourcesContent":["import { GRID_ID_AUTOGENERATED } from \"../features/rows/gridRowsUtils.js\";\nimport { createRootSelector } from \"../../utils/createSelector.js\";\n\n/**\n * Get the row id for a given row\n * @param apiRef - The grid api reference\n * @param {GridRowModel} row - The row to get the id for\n * @returns {GridRowId} The row id\n */\nexport const gridRowIdSelector = createRootSelector((state, row) => {\n  if (GRID_ID_AUTOGENERATED in row) {\n    return row[GRID_ID_AUTOGENERATED];\n  }\n  return state.props.getRowId ? state.props.getRowId(row) : row.id;\n});"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,mCAAmC;AACzE,SAASC,kBAAkB,QAAQ,+BAA+B;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,GAAGD,kBAAkB,CAAC,CAACE,KAAK,EAAEC,GAAG,KAAK;EAClE,IAAIJ,qBAAqB,IAAII,GAAG,EAAE;IAChC,OAAOA,GAAG,CAACJ,qBAAqB,CAAC;EACnC;EACA,OAAOG,KAAK,CAACE,KAAK,CAACC,QAAQ,GAAGH,KAAK,CAACE,KAAK,CAACC,QAAQ,CAACF,GAAG,CAAC,GAAGA,GAAG,CAACG,EAAE;AAClE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}